#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import argparse
import os

def transform_pub_key(pub_key):
    transformed_pub_key = '\\x' + '\\x'.join([pub_key[i:i+2] for i in range(0, len(pub_key), 2)])
    return "(const uint8_t*)\"" + transformed_pub_key + "\""

def transform_pub_keys(pub_keys):
    return ",\n".join('  ' + transform_pub_key(pub_keys[i]) for i in range(0, len(pub_keys)))

def c_source(pub_keys):
    source = "//this file is autogenerated with generate-pubkeys-cfile.py\n\n"
    source += "#ifndef TINYFIRMWARE_BOOTLOADER_PUBKEYS\n"
    source += "#define TINYFIRMWARE_BOOTLOADER_PUBKEYS\n"
    source += "static const uint8_t* const pubkey[PUBKEYS] = {\n"
    source += transform_pub_keys(pub_keys)
    source += "\n};"
    source += "\n#endif  // TINYFIRMWARE_BOOTLOADER_PUBKEYS\n"
    return source

def save_cfile(source):
    path = os.path.dirname(os.path.abspath(__file__)) + '/pub_keys.h'
    f = open(path, 'w')
    print("Generating " + path + "...")
    f.write(source)
    f.close()

def main(args):
    save_cfile(c_source(args.pub_keys))

def parse_args():
    parser = argparse.ArgumentParser(description='Commandline tool for signing Skycoin firmware.')
    parser.add_argument('-pk','--pub-keys', dest='pub_keys', nargs='+', help='<Required> Set pub keys list', required=True)
    return parser.parse_args()

if __name__ == '__main__':
    args = parse_args()
    main(args)
