language: c
matrix:
  include:
    - os: linux
      env:
        - PIP_COMMAND = 'sudo pip3'
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
    - os: osx
	env:
	  - PIP_COMMAND = 'pip3'

before_script:
  - sh "./tiny-firmware/protob/ci-scripts/install-${TRAVIS_OS_NAME}.sh" ;
  # install linters
  - make install-linters
  # Define env vars for Linux builds
  - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then
    ls -l /usr/local/bin/protoc ;
    export PATH="/usr/local/bin/protoc:$PATH" ;
    export CHECK_PATH="$(pwd)/check-0.12.0" ;
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${CHECK_PATH}/src" ;
    fi
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
    export CHECK_PATH="$(brew --prefix check)" ;
    export DYLD_LIBRARY_PATH="${DYLD_LIBRARY_PATH}:${CHECK_PATH}/lib" ;
    fi
  - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then
    export PATH="$PATH:$(pwd)/protoc/bin" ;
    echo "PATH=$PATH";
    fi
  # Install OS-specific test and build dependencies
  - eval "./ci-scripts/install-${TRAVIS_OS_NAME}.sh"
  # Include paths for brew packages e.g. SDL2
  - if [[ "$TRAVIS_OS_NAME" == 'osx' ]]; then
    export SDL_INCLUDE="$(brew --prefix sdl2)/include/SDL2" ;
    fi
script:
  - make lint
  - make -C skycoin-api test PIP=$PIP_COMMAND
  - make -C skycoin-api clean
  - make emulator PIP=$PIP_COMMAND
  - make clean
  - make full-firmware PIP=$PIP_COMMAND
  - md5sum tiny-firmware/bootloader/combine/*.bin
  - md5sum full-firmware-no-mem-protect.bin
notifications:
  # https://github.com/kvld/travisci-telegram TravisCI Telegram Bot integration
  webhooks: https://fathomless-fjord-24024.herokuapp.com/notify

